import java.util.ArrayList;
import java.util.Collections;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Objects;

public class Main {
    static class Date implements Comparable<Date> {
        private int day;
        private int month;
        private int year;

        public Date(int day, int month, int year) {
            this.day = day;
            this.month = month;
            this.year = year;
        }

        public boolean isValidDate() {
            if (month < 1 || month > 12) return false;
            int[] daysInMonth = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
            if (isLeapYear(year)) daysInMonth[1] = 29;
            return day >= 1 && day <= daysInMonth[month - 1];
        }

        private boolean isLeapYear(int year) {
            return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
        }

        public void updateDate(int newDay, int newMonth, int newYear) {
            if (new Date(newDay, newMonth, newYear).isValidDate()) {
                this.day = newDay;
                this.month = newMonth;
                this.year = newYear;
                System.out.println("Date successfully updated.");
            } else {
                System.out.println("Invalid date.");
            }
        }

        public String getDayOfWeek() {
            Calendar calendar = new GregorianCalendar(year, month - 1, day);
            int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);
            String[] days = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
            return days[dayOfWeek - 1];
        }

        public int calculateDifference(Date otherDate) {
            Calendar thisCalendar = new GregorianCalendar(this.year, this.month - 1, this.day);
            Calendar otherCalendar = new GregorianCalendar(otherDate.year, otherDate.month - 1, otherDate.day);
            long millisDifference = otherCalendar.getTimeInMillis() - thisCalendar.getTimeInMillis();
            return (int) (millisDifference / (1000 * 60 * 60 * 24));
        }

        public void printDate() {
            String[] months = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
            System.out.println(months[month - 1] + " " + day + ", " + year);
        }

        @Override
        public int compareTo(Date other) {
            if (this.year != other.year) return Integer.compare(this.year, other.year);
            if (this.month != other.month) return Integer.compare(this.month, other.month);
            return Integer.compare(this.day, other.day);
        }

        @Override
        public boolean equals(Object obj) {
            if (this == obj) return true;
            if (obj == null || getClass() != obj.getClass()) return false;
            Date other = (Date) obj;
            return this.day == other.day && this.month == other.month && this.year == other.year;
        }

        @Override
        public int hashCode() {
            return Objects.hash(day, month, year);
        }
    }

    public static void main(String[] args) {
        Date date1 = new Date(1, 1, 2023);
        Date date2 = new Date(29, 2, 2024);
        Date date3 = new Date(15, 8, 2021);
        Date date4 = new Date(30, 2, 2023);

        System.out.println("Is date1 valid? " + date1.isValidDate());
        System.out.println("Is date2 valid? " + date2.isValidDate());
        System.out.println("Is date3 valid? " + date3.isValidDate());
        System.out.println("Is date4 valid? " + date4.isValidDate());

        date4.updateDate(28, 2, 2023);
        System.out.println("Updated date4:");
        date4.printDate();

        System.out.println("Day of the week for date1: " + date1.getDayOfWeek());

        int diff = date1.calculateDifference(date3);
        System.out.println("Difference between date1 and date3: " + diff + " days");

        ArrayList<Date> dateList = new ArrayList<>();
        dateList.add(date1);
        dateList.add(date2);
        dateList.add(date3);
        dateList.add(date4);

        Collections.sort(dateList);

        System.out.println("\nSorted dates:");
        for (Date date : dateList) {
            date.printDate();
        }

        System.out.println("\nAre date1 and date2 equal? " + date1.equals(date2));
        System.out.println("Hash code of date1: " + date1.hashCode());
        System.out.println("Hash code of date2: " + date2.hashCode());
    }
}
